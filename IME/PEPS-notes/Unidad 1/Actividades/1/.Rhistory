#Se importa el paquete y se instala de ser necesario
if (!require(dplyr)){
install.packages("dplyr", dependencies = TRUE )
require (dplyr)
}
if (!require(ggpubr)){
install.packages("ggpubr", dependencies = TRUE )
require (ggpubr)
}
print(prueba)
print(prueba)
if (!require(dplyr)){
install.packages("dplyr", dependencies = TRUE )
require (dplyr)
}
if (!require(ggpubr)){
install.packages("ggpubr", dependencies = TRUE )
require (ggpubr)
}
if (!require(tidyverse)){
install.packages("tidyverse", dependencies = TRUE )
require (tidyverse)
}
if (!require(pwr)){
install.packages("pwr", dependencies = TRUE )
require (pwr)
}
tabla_alcohol <- 89 + 141
prob_exito <- 89/tabla_alcohol
valor_nulo <- 0.43
alfa <- 0.05
exitos <- prob_exito * tabla_alcohol
prueba <- prop.test(exitos, n = tabla_alcohol, p = valor_nulo, alternative = "different", conf.level = 1-alfa)
print(prueba)
prueba <- prop.test(exitos, n = tabla_alcohol, p = valor_nulo, alternative = "two.sided", conf.level = 1-alfa)
print(prueba)
resultado <- c(rep(" Obeso ", 9) , rep(" No obeso ", 10))
# Construir la tabla de contingencia .
vacuna <- c(rep (" Niño ", 9) , rep (" Niña ", 10))
resultado <- c(rep(" Obeso ", 9) , rep(" No obeso ", 10))
datos <- data . frame ( resultado , vacuna )
tabla <- xtabs (~. , datos )
print ( tabla )
# Aplicar prueba exacta de Fisher .
alfa <- 0.05
prueba <- fisher . test (tabla , 1- alfa )
print ( prueba )
# Construir la tabla de contingencia .
vacuna <- c(rep("Niño", 9), rep ("Niña", 10))
resultado <- c(rep("Obeso", 9), rep("No obeso", 10))
datos <- data.frame( resultado, vacuna)
tabla <- xtabs(~., datos)
print (tabla)
# Aplicar prueba exacta de Fisher .
alfa <- 0.05
prueba <- fisher.test(tabla, 1-alfa)
print (prueba)
# Construir la tabla de contingencia .
vacuna <- c(rep("Niño", 9), rep ("Niña", 10))
resultado <- c(rep("Obeso", 2), rep("No obeso", 7))
datos <- data.frame( resultado, vacuna)
tabla <- xtabs(~., datos)
print (tabla)
# Aplicar prueba exacta de Fisher .
alfa <- 0.05
prueba <- fisher.test(tabla, 1-alfa)
print (prueba)
# Construir la tabla de contingencia .
sexo <- c(rep("Niño", 9), rep ("Niña", 10))
condicion <- c(rep("Obeso", 2), rep("No obeso", 7))
datos <- data.frame( resultado, sexo)
tabla <- xtabs(~., datos)
print (tabla)
# Aplicar prueba exacta de Fisher .
alfa <- 0.05
prueba <- fisher.test(tabla, 1-alfa)
print (prueba)
# Construir la tabla de contingencia .
sexo <- c(rep("Niño", 9), rep ("Niña", 10))
condicion <- c(rep("Obeso", 2, 7), rep("No obeso", 8, 2))
datos <- data.frame( resultado, sexo)
tabla <- xtabs(~., datos)
print (tabla)
# Aplicar prueba exacta de Fisher .
alfa <- 0.05
prueba <- fisher.test(tabla, 1-alfa)
print (prueba)
# Construir la tabla de contingencia .
sexo <- c(rep("Niño", 9), rep ("Niña", 10))
condicion <- c(rep("Obeso", 2, 7), rep("No obeso", 8, 2))
datos <- data.frame( condicion, sexo)
tabla <- xtabs(~., datos)
print (tabla)
# Aplicar prueba exacta de Fisher .
alfa <- 0.05
prueba <- fisher.test(tabla, 1-alfa)
print (prueba)
# Construir la tabla de contingencia .
sexo <- c(rep("Niño", 9), rep("Niña", 10))
condicion <- c(rep("Obeso", 2, 7), rep("No obeso", 8, 2))
datos <- data.frame(condicion, sexo)
tabla <- xtabs(~., datos)
print (tabla)
# Aplicar prueba exacta de Fisher .
alfa <- 0.05
prueba <- fisher.test(tabla, 1-alfa)
print (prueba)
# Construir la tabla de contingencia .
sexo <- c(rep("Niño", 9), rep("Niña", 10))
condicion <- c(rep("Obeso", 9), rep("No obeso", 10))
datos <- data.frame(condicion, sexo)
tabla <- xtabs(~., datos)
print (tabla)
# Aplicar prueba exacta de Fisher .
alfa <- 0.05
prueba <- fisher.test(tabla, 1-alfa)
print (prueba)
ninos <- c(7, 9)
ninas <- c(2, 10)
tabla <- as.table(rbind(ninos, ninas))
dimnames(tabla) <- list(sexo = c("ninos", "ninas"), condicion = c("obesidad", "no obesidad")
print(tabla)
ninos <- c(7, 9)
ninas <- c(2, 10)
tabla <- as.table(rbind(ninos, ninas))
dimnames(tabla) <- list(sexo = c("ninos", "ninas"), condicion = c("obesidad", "no obesidad"))
print(tabla)
# Construir la tabla de contingencia .
ninos <- c(7, 9)
ninas <- c(2, 10)
tabla <- as.table(rbind(ninos, ninas))
dimnames(tabla) <- list(sexo = c("ninos", "ninas"), condicion = c("obesidad", "no obesidad"))
print(tabla)
# Aplicar prueba exacta de Fisher .
alfa <- 0.05
prueba <- fisher.test(tabla, 1-alfa)
print (prueba)
datos <- read.csv("CasosNuevosConSintomas.csv")
datos <- read.csv("CasosNuevosConSintomas.csv")
datos <- read.csv("CasosNuevosConSintomas.csv")
head(datos)
datos <- read.csv2("CasosNuevosConSintomas.csv")
dir
datos <- read.csv2("CasosNuevosConSintomas.csv")
getwd()
setwd("C:\Users\benja\Documents\USACH\2021\2021-2\IME\Actividades\1")
setwd("C:\\Users\\benja\\Documents\\USACH\\2021\\2021-2\\IME\\Actividades\\1")
getwd()
datos <- read.csv2("CasosNuevosConSintomas.csv")
head(datos)
View(datos)
datos <- read.csv("CasosNuevosConSintomas.csv")
head(datos)
str(datos)
tail(datos)
### Se importa el paquete dplyr, instalándolo de ser necesario.
if(!require(dplyr)){
install.packages("dplyr", dependencies = TRUE)
require(dplyr)
}
library(dbplyr)
max <- datos %>% select(Región, max(across("01.01.2021", "06.30.2021")))
max <- datos %>% select(Region, max(across("01.01.2021", "06.30.2021")))
max <- datos %>% select(Region, max(c_across("01.01.2021", "06.30.2021")))
max <- datos %>% select(Region, max(c_across("01.01.2021":"06.30.2021")))
max <- datos %>% Region %>% mutate(mak = max(c_across("01.01.2021":"06.30.2021"))=
max <- datos %>% Region %>% mutate(mak=max(c_across("01.01.2021":"06.30.2021"))=
max <- datos %>% Region %>% mutate(max(c_across("01.01.2021":"06.30.2021"))=
max <- datos %>% Region %>% mutate(mak=max(c_across("01.01.2021":"06.30.2021")))
View(datos)
max <- datos %>% filter(Region == "Los Lagos") %>% mutate(mak=max(c_across("01.01.2021":"06.30.2021")))
max <- datos %>% filter(Region == "Los Lagos") %>% mutate(max(c_across("01.01.2021":"06.30.2021")))
max <- datos %>% filter(Region == "Los Lagos") %>% mutate(max(c_across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos") %>% max(c_across("X2021.01.01":"X2021.06.30"))
max <- datos %>% filter(Region == "Los Lagos") %>% select(max(c_across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos") %>% select(max(across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos") %>% mutate(max(across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos" & (max(across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos" & (max(c_across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos" & (max(across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos" & (max(across("X2021.01.01":"X2021.06.30"))))
max <- datos %>% filter(Region == "Los Lagos" & max(across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos" & max(c_across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos" %>% mutate(m = max(c_across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos") %>% mutate(m = max(c_across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos") %>% mutate(m = max(c_across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos")#%>% mutate(m = max(c_across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos")#%>% mutate(m = max(c_across("X2021.01.01":"X2021.06.30")))
max <- datos %>% filter(Region == "Los Lagos") %>% mutate(m = max(c_across("X2021.01.01":"X2021.06.30")))
tail(max)
max <- datos %>% filter(Region == "Los Lagos" & c_across("X2021.01.01":"X2021.06.30")) # %>% mutate(m = max(c_across("X2021.01.01":"X2021.06.30")))
max <- select(filter(datos, Region = "Los Lagos"), c("X2021.01.01":"X2021.06.30"))
max <- select(filter(datos, Region == "Los Lagos"), c("X2021.01.01":"X2021.06.30"))
max <- select(filter(datos, Region == "Los Lagos"), c("Los Lagos","X2021.01.01":"X2021.06.30"))
max <- select(filter(datos, Region == "Los Lagos"), c("Region","X2021.01.01":"X2021.06.30"))
los_lagos <- select(filter(datos, Region == "Los Lagos"), c("X2021.01.01":"X2021.06.30"))
max <- apply(los_lagos, 1, function(x) wich(x==max(x)))
max <- apply(los_lagos, 1, function(x) which(x==max(x)))
max <- max.col(los_lagos, ties.method = "last")
max <- colnames[apply(los_lagos, 1, function(x) which(x==max(x)))]
max <- colnames(los_lagos)[apply(los_lagos, 1, function(x) which(x==max(x)))]
datos_periodo <- select(filter(datos), c("X2021.01.01":"X2021.06.30"))
datos_periodo <- datos %>% mutate(total = sum(c("X2021.01.01":"X2021.06.30"))) #select(filter(datos), c("X2021.01.01":"X2021.06.30"))
datos_periodo <- datos %>% mutate(total = sum(c_across("X2021.01.01":"X2021.06.30"))) #select(filter(datos), c("X2021.01.01":"X2021.06.30"))
datos_periodo <- rowSums(datos[, "X2021.01.01":"X2021.06.30"]) #datos %>% mutate(total = sum(c_across("X2021.01.01":"X2021.06.30"))) #select(filter(datos), c("X2021.01.01":"X2021.06.30"))
datos_periodo <- rowSums(datos[, c("X2021.01.01":"X2021.06.30")]) #datos %>% mutate(total = sum(c_across("X2021.01.01":"X2021.06.30"))) #select(filter(datos), c("X2021.01.01":"X2021.06.30"))
datos_periodo <- rowSums(datos[, c("X2021.01.01":"X2021.06.30")], na.rm = TRUE) #datos %>% mutate(total = sum(c_across("X2021.01.01":"X2021.06.30"))) #select(filter(datos), c("X2021.01.01":"X2021.06.30"))
datos_periodoÑ[, 0:-1]
datos_periodo[, 0:-1]
gc()
datos_periodo <- rowSums(datos[, c("X2021.01.01":"X2021.06.30")])
datos_periodo <- rowSums(datos[, which(colnames(datos) == "X2021.01.01"):which(colnames(datos) == "X2021.06.30")]) #c("X2021.01.01":"X2021.06.30")])
total <- rowSums(datos[, which(colnames(datos) == "X2021.01.01"):which(colnames(datos) == "X2021.06.30")]) #c("X2021.01.01":"X2021.06.30")])
datos_periodo <- data.frame(datos[0], total)
datos_periodo <- data.frame(datos[,0], total)
datos_periodo <- data.frame(datos[,c(0)], total)
datos_periodo <- data.frame(datos[,1], total)
datos_periodo <- data.frame(datos[,1]$Region, total)
datos_periodo <- data.frame(Region = datos[,1], total)
